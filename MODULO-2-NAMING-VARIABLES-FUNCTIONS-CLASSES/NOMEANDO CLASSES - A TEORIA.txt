










VIMOS O NAMING DE VARIABLES, OBJECTS, PROPERTIES, FUNCTIONS E METHOSD..










AGORA DEVEMOS VER CLASSES...



















COM CLASSES, SEMPRE TEMOS O MESMO CASO..

















1) DEVEMOS DESCREVER O OBJECT QUE É CRIADO QUANDO INSTANCIAMOS 
OBJECTS...










2) DEVEMOS TER EM MENTE QUE CLASSES GERALMENTE SÃO USADAS 

PARA INSTANCIAR ALGO..








3) É POR ISSO QUE O CLASS NAME DEVE TIPICAMENTE DESCREVER O TIPO DE OBJECT QUE É CRIADO.

(ex:

'User', 'Product')...









4) VC PODE PROVIDENCIAR MAIS DETALHES, SE N INTRODUZIR REDUNDÂNCIA





ex:



'Customer' ---> não é user, e sim CUSTOMER...


'Course' --> não é 'product', pq é UM ONLINE COURSE...










5) VC TAMBÉM PODE USAR MAIS DE 1 NOME PARA 

CLASS NAMES... -> MAS VC DEVE EVITAR 



SUFIXOS REDUNDANTES,

COMO 


'DatabaseManager'...









--> PODE SER INTRIGANTE USAR NOMES COMO ESSES.. --> MAS TENHA EM MENTE QUE 

AS CLASSES 

SÃO 

TIPICAMENTE INSTANCIADAS... --> E O QUE SERIA 1 INSTANCE DE 


1 'DATABASE MANAGER'?  --> se isso é uma PESSOA EM SUA COMPANHIA,


A PESSOA QUE 

FAZ MANAGE DE TODAS AS DATABASES,


ISSO FAZ SENTIDO... --> MAS  SE ISSO FOR 1 COISA ABSTRATA NO SEU CÓDIGO 


QUE SÓ 

FAZ MANAGE 

DE TODAS AS DATABASES QUE 



SEU APP USA,






__ TALVEZ__ EXISTAM OUTROS NOMES MELHORES...









--> 'DatabaseManager' --> FAZ MAIS SENTIDO SE TIVERMOS 1 CLASS 

STATIC,

QUE ESTEJA CHEIA DE UTILITY METHODS...










-> VC TIPICAMENTE QUER USAR NOMES MAIS CLAROS DO QUE 'DatabaseManager',



QUE CONSIGAM SER INSTANCIADOS...







certo...