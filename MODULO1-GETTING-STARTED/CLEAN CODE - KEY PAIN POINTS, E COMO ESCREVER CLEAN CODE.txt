














---> OK... QUANDO O ASSUNTO É ESCREVER AQUELA 'ESSAY',
1 'BOA STORY'


com seu código,



HÁ ALGUMAS 'PAIN POINTS'


EM QUE VC 

QUER FOCAR...



ESSES PAIN POINTS 



SERÃO VISTOS EM CADA 


MODULE DESSE CURSO...












1) NAMING DE COISAS --> COM OS NAMES QUE ASSIGNAMOS A VARIABLES, FUNCTIONS 

E CLASSES -> JÁ PODEMOS ESTRAGAR NOSSO CÓDIGO COM ISSO...












2) DEPOIS DISSO,


CONTINUAMOS COM 'STRUCTURE' E 'COMMENTS' QUE DEIXAMOS NO CÓDIGO..



---> COMO APRENDEREMOS, FORMATAÇÃO DE CÓDIGO IMPORTA,


E HÁ 

VÁRIOS ASPECTOS QUE ENTRAM NA JOGADA,

QUANDO 
FALAMOS DE CODE FORMATTING...








--> É POSSÍVEL DIFERENCIAR GOOD COMMENTS DE BAD COMMENTS...










--> MTOS COMMENTS PODEM LEVAR A CÓDIGO RUIM...








3) OUTRA ÁREA IMPORTANTE SERÁ A DE 'FUNCTIONS'...



- VEREMOS A 'LENGTH' DAS FUNCTIONS  (A QUANTIDADE DE CÓDIGO 
QUE DEVE FICAR DENTRO DE CADA FUNCTION) 


- O TIPO DE CÓDIGO DENTRO DE CADA FUNCTION...




- A QUANTIDADE DE PARAMETERS QUE CADA FUNCTION DEVE TER..








- FUNCTIONS SÃO UMA DAS KEY THINGS QUE LEVAM
 


 A CÓDIGO BOM OU RUIM...











4) TAMBÉM VEREMOS 'CONDITIONALS' E 'ERROR HANDLING'...







--> PQ O NESTING DE CONDITIONALS E __ CONTROL STRUCTURES 

EXCESSIVAMENTE É ALGO TERRÍVEL...








--> E A FALTA DE ERROR HANDLING APPROPRIADO --> é um dos 

erros mais 


comuns por parte dos desenvolvedores..











5) POR FIM,


VEREMOS O TRABALHO COM CLASSES,

OBJECTS E DATA STRUCTURES -------> ESSA É OUTRA ÁREA-CHAVE EM QUE 

É 
FÁCIL 




DEIXAR O CÓDIGO RUIM --> 





É MT FÁCIL TER NENHUMA DIFERENCIAÇÃO ENTRE 'DATA STRUCTURES'

e
'REAL OBJECTS'...









-> TAMBÉM É FÁCIL ACABAR _ COM BLOATED CLASSES,
QUE FAZEM MTAS COISAS,

O QUE 



DEIXA A COMPREENSÃO POR PARTE DE OUTROS DESENVOLVEDORES MAIS DIFÍCIL...









VEREMOS


AS VÁRIAS SOLUÇÕES QUE VC PODE APLICAR,

PARA 

ESCREVER CÓDIGO CLEAN..












--> VEREMOS:




1) RULES E CONCEPTS 



2) PATTERNS E PRINCIPLES 






3) TEST-DRIVEN DEVELOPMENT...












VEREMOS 'test-driven development',


OU 

___ 'COMO TESTING PODE TE AJUDAR A ESCREVER CLEAN CODE TAMBÉM'..  (mas esse não é 
um curso de test-driven development),...



























--> VAMOS APRENDER A ESCREVER CLEAN CODE JÁ DO INÍCIO...